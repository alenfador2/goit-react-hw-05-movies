{"version":3,"file":"static/js/168.4a8fdb61.chunk.js","mappings":"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","sources":["components/IsLoadingHook/LoaderHook.jsx","webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","components/fetchMovies.js"],"sourcesContent":["import { useState } from 'react';\n\nexport const useLoaderHook = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const open = () => setIsLoading(true);\n  const close = () => setIsLoading(false);\n\n  return { isLoading, open, close };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"reviews_div\":\"Reviews_reviews_div__fJt6t\",\"review\":\"Reviews_review__sHbuN\",\"user_comment\":\"Reviews_user_comment__RRl7W\"};","import { getReviews } from 'components/fetchMovies';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { useLoaderHook } from '../IsLoadingHook/LoaderHook';\nimport Loader from '../Loader/Loader';\nimport css from './Reviews.module.css';\nimport { Notify } from 'notiflix';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  const { open, close, isLoading } = useLoaderHook(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      open();\n      try {\n        const reviews = await getReviews(movieId);\n        setReviews(reviews);\n      } catch (error) {\n        Notify.failure('Something went wrong...');\n        console.log(error);\n      } finally {\n        close();\n      }\n    };\n    fetchData();\n    //eslint-disable-next-line\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className={css.reviews_div}>\n          {reviews.map(review => {\n            return (\n              <div key={review.id} className={css.review}>\n                <h3 className={css.username}>{review.author} write:</h3>\n                <p className={css.user_comment}>{review.content}</p>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport { Notify } from 'notiflix';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlNThmZmE0NDE4MGExNjIzNTI4M2I4YzYyZGFkYTBjYiIsInN1YiI6IjY1ZDEyN2Q1YWE2NTllMDE4NjQyODM1YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.5B6314cItycUPZ96dF8XKEGzB2Kk_hOIaTyDuVlAhvc';\nconst apiKey = 'e58ffa44180a16235283b8c62dada0cb';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `/trending/movie/day?language=en-US&api_key=${apiKey}`\n    );\n    const data = response.data;\n    const { results } = data;\n    return results;\n  } catch (error) {\n    Notify.failure('Failed fetch data');\n    console.log('Failed fetch data: ', error);\n  }\n};\n\nexport const searchMovie = async query => {\n  try {\n    const response = await axios.get(\n      `/search/movie?query=${query}&api_key=${apiKey}&language=en-EU&page=1&include_adult=false`\n    );\n    const data = response.data;\n    const { results } = data;\n    return results;\n  } catch (error) {\n    Notify.failure('Failed fetch data');\n    console.log(error);\n  }\n};\n\nexport const fetchMovieById = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}?api_key=${apiKey}`);\n    const data = response.data;\n    return data;\n  } catch (error) {\n    Notify.failure('Failed fetch data');\n    console.log(error);\n  }\n};\n\nexport const getReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews?language=en-EU&page=1&api_key=${apiKey}`\n    );\n    const data = response.data;\n    const { results } = data;\n    return results;\n  } catch (error) {\n    Notify.failure('Failed fetch data');\n    console.log(error);\n  }\n};\n\nexport const getCredits = async movieId => {\n  try {\n    const res = await axios.get(\n      `/movie/${movieId}/credits?language=en-EU&api_key=${apiKey}`\n    );\n    const data = res.data;\n    const { cast } = data;\n    return cast;\n  } catch (error) {\n    Notify.failure('Failed fetch data');\n    console.log(error);\n  }\n};\n"],"names":["useLoaderHook","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","open","close","reviews","setReviews","movieId","useParams","_useLoaderHook","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_reviews","_context","prev","next","getReviews","sent","t0","Notify","console","log","finish","stop","apply","arguments","_jsx","_Fragment","children","Loader","className","css","map","review","_jsxs","author","content","id","axios","apiKey","fetchTrendingMovies","response","data","results","concat","abrupt","searchMovie","_ref2","_callee2","query","_context2","_x","fetchMovieById","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","_x3","getCredits","_ref5","_callee5","res","cast","_context5","_x4"],"sourceRoot":""}